import React, { useState, useEffect } from "react";
import "./ReferralLink.css"; // CSS ‡¶´‡¶æ‡¶á‡¶≤ ‡¶á‡¶Æ‡ßç‡¶™‡ßã‡¶∞‡ßç‡¶ü
import { doc, setDoc, getDoc } from "firebase/firestore"; // Firestore ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
import db from "./firebase"; // Firestore instance

const ReferralLink = ({ userId }) => {
  const [referralLink, setReferralLink] = useState(""); // ‡¶∞‡ßá‡¶´‡¶æ‡¶∞‡ßá‡¶≤ ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶∏‡ßç‡¶ü‡ßá‡¶ü
  const [loading, setLoading] = useState(true); // ‡¶≤‡ßã‡¶°‡¶ø‡¶Ç ‡¶∏‡ßç‡¶ü‡ßá‡¶ü

  useEffect(() => {
    const fetchOrCreateReferralLink = async () => {
      try {
        // Firestore ‡¶°‡¶ï‡ßÅ‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶∞‡ßá‡¶´‡¶æ‡¶∞‡ßá‡¶®‡ßç‡¶∏
        const docRef = doc(db, "referrals", userId);

        // ‡¶°‡ßá‡¶ü‡¶æ ‡¶´‡ßá‡¶ö ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®
        const docSnap = await getDoc(docRef);

        if (docSnap.exists()) {
          // ‡¶Ø‡¶¶‡¶ø ‡¶°‡¶ï‡ßÅ‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶•‡¶æ‡¶ï‡ßá, ‡¶∞‡ßá‡¶´‡¶æ‡¶∞‡ßá‡¶≤ ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®
          setReferralLink(docSnap.data().referralLink);
        } else {
          // ‡¶Ø‡¶¶‡¶ø ‡¶°‡¶ï‡ßÅ‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶®‡¶æ ‡¶•‡¶æ‡¶ï‡ßá, ‡¶®‡¶§‡ßÅ‡¶® ‡¶∞‡ßá‡¶´‡¶æ‡¶∞‡ßá‡¶≤ ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßÅ‡¶®
          const botUsername = "Profitbridgebot"; // ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¨‡¶ü‡ßá‡¶∞ ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡¶®‡ßá‡¶Æ
          const link = `https://t.me/${botUsername}?start=${userId}`;

          // ‡¶®‡¶§‡ßÅ‡¶® ‡¶°‡ßá‡¶ü‡¶æ Firestore-‡¶è ‡¶∏‡¶Ç‡¶∞‡¶ï‡ßç‡¶∑‡¶£ ‡¶ï‡¶∞‡ßÅ‡¶®
          await setDoc(docRef, {
            userId: userId,
            referralLink: link,
            referralCount: 0,
            points: 0,
            referredUsers: [],
          });

          setReferralLink(link); // ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶∏‡ßç‡¶ü‡ßá‡¶ü‡ßá ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®
        }
      } catch (error) {
        console.error("Error fetching or creating referral link:", error);
      } finally {
        setLoading(false); // ‡¶≤‡ßã‡¶°‡¶ø‡¶Ç ‡¶∂‡ßá‡¶∑
      }
    };

    fetchOrCreateReferralLink(); // ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® ‡¶ï‡¶≤
  }, [userId]);

  return (
    <div className="referral-container">
      <div className="referral-card">
        <h3 className="referral-title">üéâ Share & Earn Rewards!</h3>
        {loading ? (
          <p className="loading-text">Generating your referral link...</p>
        ) : (
          <>
            <p className="referral-instruction">
              Share the link below with your friends and earn rewards when they join!
            </p>
            <div className="referral-link-box">
              <input
                type="text"
                value={referralLink}
                readOnly
                className="referral-link-input"
              />
              <button
                className="copy-button"
                onClick={() => {
                  navigator.clipboard.writeText(referralLink);
                  alert("Referral link copied to clipboard!");
                }}
              >
                Copy
              </button>
            </div>
          </>
        )}
      </div>
    </div>
  );
};

export default ReferralLink;
